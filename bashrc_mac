# If not running interactively, don't do anything
# solves rsync issues
case $- in
    *i*) ;;
    *) return;;
esac
# Setting up the terminal
# Note: for git to work, redirect all output to standard error 1>&2 or /dev/null
# printf "\n ** Loading .bashrc **\n" 1>&2
export CLICOLOR=1

export LSCOLORS=GxFxCxDxBxegedabagaced

alias ls='ls -GFh'
alias l='ls -GFh'
alias lf='ls -Fa'
alias la='ls -Fla'
alias lsize='ls -lrS' # Sort by size at the end
alias lx='ls -lXB' # Sort by extension
# alias ll="ls -lv --group-directories-first"
alias ll='ls -lv'
alias lm='ll |more'
alias tree='tree -Csuh'
alias du='du -kh'
alias df='df -kTh'
alias more='less'

## Readlink like in linux
## Install coreutils from homebrew first to make it work
command -v greadlink >/dev/null 2>&1 && alias readlink='greadlink -f'

## IPython notebook
NOTEDIR=$HOME/Documents/notebooks
alias ipnbs='jupyter notebook --notebook-dir=$NOTEDIR --browser="safari"'
alias ipnb='jupyter notebook --notebook-dir=$NOTEDIR --no-browser --port=7777'

## IPython console
# alias ipc='jupyter qtconsole --style=monokai'
alias ipc='jupyter qtconsole --style=fruity --gui-completion=droplist --ConsoleWidget.font_size=16 --ConsoleWidget.font_family="Anonymous Pro"'
## Get rid of the executable bit when copying from windows shares
## Change maxdepth > 1 to enter directories
alias losex='find . -maxdepth 3 -type f -exec chmod -x {} +'
## And the same when copying from someone that leaves
## 777 permissions to the directories
alias losew='find . -maxdepth 3 -type d -exec chmod 755 {} +'

## Make finder show/hide hidden files
alias hideFiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'
alias showFiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'

# let's have emacs handling text files
alias edit='emacsclient -t $1'

## use up and down arrow to search history!
bind '"\e[A"':history-search-backward
bind '"\e[B"':history-search-forward

## By default, the number of max. open files for a terminal process
## is very low. Only 256. Increase that.
ulimit -n 65536
ulimit -u 2048

## Defining locales, sad...
export LC_ALL=de_DE.UTF-8
export LANG=$LC_ALL
export LC_CTYPE=$LC_ALL

# LESS man page colors (makes Man pages more readable).
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

set_prompt () {
    Blue='\[\e[01;34m\]'
    White='\[\e[01;37m\]'
    Red='\[\e[01;31m\]'
    Green='\[\e[00;32m\]'
    Cyan="\[\e[00;36m\]"
    BGreen='\[\e[01;32m\]'
    BYellow="\[\033[1;33m\]"
    Normal="\[\033[0m\]"
    Reset='\[\e[00m\]'
    # to get the octal codes: echo â–¶|hexdump -b
    FancyX='\342\234\227'
    Checkmark='\342\234\223'
    ArrowPrompt='\342\226\266'
    HappySmiley='\342\230\272'

    PS1="$Reset"
    if [[ $EUID == 0 ]]; then
         PS1+="$Red\\h "
    else
         PS1+="$Cyan\\u$Green@\\h:"
    fi
    # Print the working directory and prompt marker in blue, and reset
    # the text color to the default.
    #PS1+="$Blue\\w \\\$$Reset "
    #PS1+="$BYELLOW\w$NORMAL \$ "
    # PS1+="$BYELLOW\w$NORMAL $Red$ArrowPrompt$Reset "
    PS1+="$BYellow\W$Normal $Red>$Reset "
}
# PROMPT_COMMAND='set_prompt'
export PS1="\[\033[38;5;3m\][\A]\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]\[\033[38;5;12m\]\u\[$(tput sgr0)\]\[\033[38;5;5m\]@\[$(tput sgr0)\]\[\033[38;5;9m\]\h\[$(tput sgr0)\]\[\033[38;5;15m\]\n\[$(tput sgr0)\]\[\033[38;5;6m\]\w\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]\[\033[38;5;2m\]>\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]"
# Functions to grep source code files
# Blatantly copied from http://alexteichman.com/octo/blog/2013/12/08/quickly-navigating-large-repositories-from-the-terminal/
# and adapted to work fine in MacOS X
# Usage example to open a result from cgrep in $EDITOR: cgrep imread | yank 6
# Example to make a replace: sed -i 's/Name2/Name/g' `cfiles`
function cfiles {
    find . -regex '.*\.h$|.*\.hpp$|.*\.c$|.*\.cpp|.*\.cc$'
}

function cgrep {
    2>/dev/null grep -n "$@" $(cfiles) | nl | grep "$@"
}

function hfiles {
    find . -regex '.*\.h|.*\.hpp'
}

function hgrep {
    2>/dev/null grep -n "$@" $(hfiles) | nl | grep "$@"
}

function pyfiles {
    find . -regex '.*\.py$' | grep -v '#'
}

function pygrep {
    2>/dev/null grep -n "$@" $(pyfiles) | nl | grep "$@"
}

function yank {
    grep "^\s*$@\s" | awk '{print $2}' | sed 's/-\([0-9]*\)-/:\1:/g' | awk -F: '{print $1 " +" $2}' | awk '{print $2 " " $1}' | xargs ${EDITOR:?EDITOR must be set.}
}

# Precedence for user binaries
export PATH=/usr/local/bin:/usr/local/sbin:$PATH
# Python path
# export PYTHONPATH=/usr/local/lib/python2.7/site-packages/:$PYTHONPATH

# Just installed bash_completion
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi

# miniconda as alternative to homebrew's python
function pyconda {
    unset PYTHONPATH
}

function pybrew {
    export PYTHONPATH=/usr/local/lib/python2.7/site-packages/:$PYTHONPATH
}

# qfc setup
# [[ -s "$HOME/.qfc/bin/qfc.sh" ]] && source "$HOME/.qfc/bin/qfc.sh"

# Remember more
export HISTSIZE=2000
export HISTFILESIZE=10000
# append and not overwrite history
# useful for multiple sessions opened
shopt -s histappend

# FSL Setup
FSLDIR=/usr/local/fsl
PATH=${FSLDIR}/bin:${PATH}
export FSLDIR PATH
. ${FSLDIR}/etc/fslconf/fsl.sh

# mricron
mricronpath=/usr/local/mricron
export PATH=$PATH:$mricronpath

# FreeSurfer (as requested in the documentation)
export FREESURFER_HOME=/Applications/freesurfer
source $FREESURFER_HOME/SetUpFreeSurfer.sh

# Matlab path
# export MATLABCMD=/Applications/MATLAB_R2013b.app/bin/maci64/MATLAB
export MATLABCMD=/Applications/MATLAB_R2013b.app/bin/matlab
# echo "MATLAB PATH: $MATLABCMD"
# pymatbridge python setup
export MATLAB_EXECUTABLE=$MATLABCMD

# echo "Adding ANTS to path:"
export ANTSPATH=$HOME/Source/external/antsbin/bin
# echo "ANTSPATH: $ANTSPATH"
export PATH=$PATH:$ANTSPATH
# echo

# echo "Adding ASHS (fastashs) to the path:"
export ASHS_ROOT=$HOME/Source/external/ashs

# echo "Adding user's bin/ to path"
export PATH=$PATH:$HOME/bin
# echo
export PATH=$PATH:/Users/valdesj/abin
