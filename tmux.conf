# set scrollback to 5000 lines
set -g history-limit 5000

# mode
set-option -g mode-bg brightblack
set-option -g mode-fg default

# status position: bottom or top
set-option -g status-position bottom

# basic status bar colors
set-option -g status-bg default
set-option -g status-fg white

# status update interval
set-option -g status-interval 5

# status bar: left
set-option -g status-left-length 40
set-option -g status-left "#[fg=brightwhite,bg=#3d4344] S:#S #[fg=default,bg=default] "

# status bar: right
set-option -g status-right-length 40
set-option -g status-right " #[fg=brightwhite,bg=#3d4344] #(whoami)@#h %a, %d %b %H:%M "

# status bar: windows
set-option -g window-status-format "#[fg=white,bg=#596263] #I #[fg=white,bg=#363636] #W "
set-option -g window-status-current-format "#[fg=brightwhite,bg=#00aa7f] #I #[fg=brightwhite,bg=#3871aa] #W "
set-option -g window-status-separator " "
set-option -g status-justify centre

# Pane border
set-option -g pane-border-bg default
set-option -g pane-border-fg brightblack
set-option -g pane-active-border-bg default
set-option -g pane-active-border-fg white

# Pane number indicator
set-option -g display-panes-colour brightblack
set-option -g display-panes-active-colour brightwhite

# Clock mode
set-option -g clock-mode-colour white
set-option -g clock-mode-style 24

# Message
set-option -g message-bg default
set-option -g message-fg default

# Set window notifications
setw -g monitor-activity off
set -g visual-activity off

# Needed for vim-gitgutter
set -g focus-events on

# set status off in windows named writing when switching to it,
# set it on otherwise
# good for distraction free writing
set-hook -g after-select-window 'if -F "#{==:#{window_name},writing}" "set -g status off" "set -g status on"'

# Automatically set window title: might be CPU intensive
# setw -g automatic-rename

# 256 colors
# if this terminal is not found, install ncurses-term in ubuntu
# it tput cannot find the terminal, chech that conda does not interfere
set -g default-terminal "tmux-256color"
# True color
set-option -ga terminal-overrides ",xterm-256color:Tc"

# renumber windows when one is closed
set-option -g renumber-windows on

# Scroll with the mouse after ^b + [
set-option -g mouse on

# use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

# update default binding of enter to also use copy-pipe
# unbind -T copy-mode-vi Enter

# increase pane display number timeout
set-option -g display-panes-time 2500

# nvim identified a problem with timeout of ESC key: it is too long the
# consequence is that after pressing ESC there is a long delay until normal mode
# very annoying. Anything below 100 will do
set -sg escape-time 1

# keybindings from https://gist.github.com/spicycode/1229612
# Some terminal programs might conflict with some of this, in particular the
# bindings involving arrow keys. For example, konsole binds S-Left and S-Right
# to previous and next tab

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# OS dependent config
if-shell "uname | grep -q Darwin" "source-file ~/dotfiles/tmux.conf.macos"
if-shell "uname | grep -q Linux" "source-file ~/dotfiles/tmux.conf.linux"

# tmux plugin manager - cloned in ~/.tmux/plugins/tpm
source-file ~/dotfiles/tmux.conf.plugins
