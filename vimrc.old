" URL: http://vim.wikia.com/wiki/Example_vimrc
" Authors: http://vim.wikia.com/wiki/Vim_on_Freenode
" Description: A minimal, but feature rich, example .vimrc. If you are a
"              newbie, basing your first .vimrc on this file is a good choice.  
"              If you're a more advanced user, building your own .vimrc based
"              on this file is still a good idea.

"------------------------------------------------------------
" Features {{{1
"
" These options and commands enable some very useful features in Vim, that
" no user should have to live without.

" Set 'nocompatible' to ward off unexpected things that your distro might
" have made, as well as sanely reset options when re-sourcing .vimrc
set nocompatible

" Attempt to determine the type of a file based on its name and possibly its
" contents.  Use this to allow intelligent auto-indenting for each filetype,
" and for plugins that are filetype specific.
filetype off   " Required by Vundle
filetype indent on

" Encodings to UTF-8
" set enc=utf-8
" set fenc=utf-8
" set termencoding=utf-8
" -----------------------------------------------------------------------------
" Encoding
" -----------------------------------------------------------------------------

" Stick with the UTF-8 encoding.
if has('multi_byte')
  " Encoding used for the terminal.
  if empty(&termencoding)
    let &termencoding = &encoding
  endif

  " Encoding used in buffers, registers, strings in expressions, "viminfo"
  " file, etc.
  set encoding=utf-8

  " Encoding used for writing files.
  setglobal fileencoding=utf-8
endif

" Vundle set-up
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required! 
Plugin 'gmarik/Vundle.vim'
" repos on github
Plugin 'LaTeX-Box-Team/LaTeX-Box'
" Ultisnips on github
" Bundle 'vim-scripts/UltiSnips'
" Autoclose
Plugin 'Townk/vim-autoclose'
" Easymotion
Plugin 'Lokaltog/vim-easymotion'
" Solarized colour scheme
Plugin 'altercation/vim-colors-solarized'
" Surround
Plugin 'tpope/vim-surround'
" Supertab
Plugin 'ervandew/supertab'
" CtrlP fuzzy finder
Plugin 'kien/ctrlp.vim'
" Jedi-Vim Python autocompletion
Plugin 'davidhalter/jedi-vim'
" Colour Pack!!
Plugin 'vim-scripts/Colour-Sampler-Pack'
" Neocomplcache and neosnippet
Plugin 'Shougo/neocomplcache.git'
Plugin 'Shougo/neosnippet.git'
Plugin 'honza/vim-snippets'
" FuzzyFinder
"Plugin 'L9'
"Plugin 'FuzzyFinder'
" Snipmate and dependencies
"Plugin "git://github.com/MarcWeber/vim-addon-mw-utils.git"
"Plugin "git://github.com/tomtom/tlib_vim.git"
"Plugin "git://github.com/garbas/vim-snipmate.git"
"
" Brief help
" :PluginList          - list configured bundles
" :PluginInstall(!)    - install(update) bundles
" :PluginSearch(!) foo - search(or refresh cache first) for foo
" :PluginClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..

" Vundle end set-up

filetype plugin indent on

" Fall back to LaTeX format by default if no keywords distinguish among TeX,
" LaTex
let g:tex_flavor='latex'

" Needed for omnicompletion
filetype plugin on

" Enable syntax highlighting
syntax on

" Colours
set t_Co=256

" Remap leader key from \ to ,
"let mapleader=","
"let mapleader="ยก"

" CtrlP Plugin
" ---------------------------------------------------------
"let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_custom_ignore = {
	\ 'dir':  '\v[\/]\.(git|hg|svn)$',
	\ 'file': '\v\.(exe|so|dll|mp3|flac|avi|mkv|mp4|pdf|dvi|jpg|blf|log|aux)$',
	\ 'link': 'SOME_BAD_SYMBOLIC_LINKS',
	\ }
" ---------------------------------------------------------

" Latex Box Plugin
" ---------------------------------------------------------
let g:LatexBox_latexmk_options="-pdf"
let g:LatexBox_output_type="pdf"
let g:LatexBox_viewer="C:\Program Files (x86)\SumatraPDF\SumatraPDF.exe"
" ---------------------------------------------------------

" Neocomplcache settings
    "let g:acp_enableAtStartup = 0
    let g:neocomplcache_enable_at_startup = 1
    let g:neocomplcache_enable_camel_case_completion = 1
    let g:neocomplcache_enable_smart_case = 1
    let g:neocomplcache_enable_underbar_completion = 1
    "let g:neocomplcache_enable_auto_delimiter = 1
    let g:neocomplcache_max_list = 15
    "let g:neocomplcache_force_overwrite_completefunc = 1

    " SuperTab like snippets behavior.
"    imap <silent><expr><TAB> neosnippet#expandable() ?
"                \ "\<Plug>(neosnippet_expand_or_jump)" : (pumvisible() ?
"                \ "\<C-e>" : "\<TAB>")
"    smap <TAB> <Right><Plug>(neosnippet_jump_or_expand)

    " Keybindings
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)  
    " <TAB>: completion.
    inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
    inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<TAB>"
    " <CR>: close popup
    " <s-CR>: close popup and save indent.
    "inoremap <expr><s-CR> pumvisible() ? neocomplcache#close_popup()"\<CR>" : "\<CR>"
    "inoremap <expr><CR> pumvisible() ? neocomplcache#close_popup() : "\<CR>"

    " Enable neosnippet snipmate compatibility mode
    let g:neosnippet#enable_snipmate_compatibility = 1

    " Use honza's snippets.
    let g:neosnippet#snippets_directory='~/.vim/bundle/vim-snippets/snippets'

" Vim latex suite
" ------------------------------------------------------------------------------
"set grepprg=grep\ -nH\ $*
"let g:tex_flavor = "latex"
"let g:Tex_DefaultTargetFormat='pdf'
"let g:Tex_CompileRule_pdf='pdflatex --shell-escape -synctex=1 --interaction=nonstopmode $*'
"let g:Tex_Menus=0
"let g:Tex_ViewRule_pdf='okular'
"set runtimepath=~/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,~/.vim/after
" ------------------------------------------------------------------------------

" Automatic Tex Plugin ---------------------------------------------------------
" AutomaticTexPlugin remaps TAB key making it incompatible with snipmate. The
" following line maps completion to <F7> instead.
"let g:atp_no_tab_map=1
"let g:atp_Python="/usr/bin/python2"
"let g:LatexBox_viewer='okular'
"let g:LatexBox_latexmk_options='-pvc' "open pdf file and monitor continously
" ------------------------------------------------------------------------------


"------------------------------------------------------------
" Must have options {{{1
"
" These are highly recommended options.

" One of the most important options to activate. Allows you to switch from an
" unsaved buffer without saving it first. Also allows you to keep an undo
" history for multiple files. Vim will complain if you try to quit without
" saving, and swap files will keep you safe if your computer crashes.
set hidden

" Longer history
set history=1000

" Better command-line completion
" wildignorecase doesn't seem to work in windows. Meh.
set wildmenu
"set wildignorecase

" Exclude files and directories
" Windows
set wildignore+=*\\tmp\\,*.swp,*.zip,*.exe,*.avi,*.mkv,*.mp3,*.flac,*.blf,*.log,*aux,*out,*swp
" Linux
" set wildignore+=*/tmp/,*.swp,*.zip,*.exe,*.avi,*.mkv,*.mp3,*.flac

" Show partial commands in the last line of the screen
set showcmd

" Highlight searches (use <C-L> to temporarily turn off highlighting; see the
" mapping of <C-L> below)
set hlsearch

" Modelines have historically been a source of security vulnerabilities.  As
" such, it may be a good idea to disable them and use the securemodelines
" script, <http://www.vim.org/scripts/script.php?script_id=1876>.
" set nomodeline


"------------------------------------------------------------
" Usability options {{{1
"
" These are options that users frequently set in their .vimrc. Some of them
" change Vim's behaviour in ways which deviate from the true Vi way, but
" which are considered to add usability. Which, if any, of these options to
" use is very much a personal preference, but they are harmless.

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" When opening a new line and no filetype-specific indenting is enabled, keep
" the same indent as the line you're currently on. Useful for READMEs, etc.
set autoindent

" Stop certain movements from always going to the first character of a line.
" While this behaviour deviates from that of Vi, it does what most users
" coming from other editors would expect.
set nostartofline

" Display the cursor position on the last line of the screen or in the status
" line of a window
set ruler

" Always display the status line, even if only one window is displayed
set laststatus=2

" Instead of failing a command because of unsaved changes, instead raise a
" dialogue asking if you wish to save changed files.
set confirm

" Use visual bell instead of beeping when doing something wrong
set visualbell

" And reset the terminal code for the visual bell.  If visualbell is set, and
" this line is also included, vim will neither flash nor beep.  If visualbell
" is unset, this does nothing.
set t_vb=

" Enable use of the mouse for all modes
set mouse=a

" Set the command window height to 2 lines, to avoid many cases of having to
" "press <Enter> to continue"
set cmdheight=2

" Display line numbers on the left
set number
" line numbering takes up 5 spaces
set numberwidth=4

" Quickly time out on keycodes, but never time out on mappings
set notimeout ttimeout ttimeoutlen=200

" Use <F11> to toggle between 'paste' and 'nopaste'
set pastetoggle=<F11>

"folding settings
set nofoldenable "don't fold by default

" When the page starts to scroll, keep the cursor 4 lines from the top and 4
" lines from the bottom
set scrolloff=4

"------------------------------------------------------------
" Indentation options {{{1
"
" Indentation settings according to personal preference.

" Indentation settings for using 2 spaces instead of tabs.
" Do not change 'tabstop' from its default value of 8 with this setup.
"set shiftwidth=4
"set softtabstop=4
"set expandtab

" Indentation settings for using hard tabs for indent. Display tabs as
" two characters wide.
set shiftwidth=4
set tabstop=4
set expandtab

"-----------------------------------------------------------
" I don't like wrapping
set nowrap
set sidescroll=5
set listchars+=precedes:<,extends:>
set colorcolumn=82
"set textwidth=80 " But at the same time I want lines to break at 80 characters
"------------------------------------------------------------
" Mappings {{{1
"
" Useful mappings

" Map Y to act like D and C, i.e. to yank until EOL, rather than act as yy,
" which is the default
"map Y y$

" Map <C-L> (redraw screen) to also turn off search highlighting until the
" next search
nnoremap <C-L> :nohl<CR><C-L>

" <esc> is difficult to reach, so let's try this:
imap kj <Esc>
imap jk <Esc>

" Windows management
" Resize windows splitted vertically
nmap - <C-W>-
nmap + <C-W>+

" Make a dollar sign appear when using change command
set cpoptions+=ces$B

" Scroll between open windows with F6 (conflicts with atp plugin)
":map <F6> <C-W>w

" Allow the cursor to be positioned where there is no actual character, but
" only in Blockwise Visual Mode.
set virtualedit=block
" Display buffer list. Enter buffer number and <Enter> to edit.
nnoremap ,b :ls<CR>:buffer<Space>

" Enable spell checking
" set spell
" set spelllang=en_gb

" Omnicompletion functions
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
au FileType py set expandtab
au FileType py set foldmethod=indent
au FileType py set autoindent
au FileType py set smartindent
"------------------------------------------------------------
"set background=dark
"Change colorscheme to delek
"colorscheme nuvola
"colorscheme zenburn
"colorscheme summerfruit256
"colorscheme molokai
"colorscheme anotherdark
"colorscheme desertEx
colorscheme desert
"let g:solarized_termcolors=256    "default value is 16
"let g:solarized_contrast="normal"    "default value is normal
"let g:solarized_visibility="normal"    "default value is normal
"set background=dark
"colorscheme solarized

if has("gui_running")
    " Number of horizontal lines on screen
    set lines=60
    " Number of vertical columns on screen
    set columns=90
    " Set font and size
    set guifont=Menlo:h14
    "set guifont=DejaVu_Sans_Mono:h10
    "set guifont=Consolas:h10
    " set guifont=Ubuntu\ Mono\ 10
    " Don't show the toolbar
    ""set guioptions-=T
endif
